/*SQL : 데이터베이스 제어 언어
 * 
 * DDL - CREATE(테이블 생성), DROP(테이블 삭제), ALTER(테이블 수정) -- 테이블
 * DML - SELECT, INSERT, DELET, UPDATE 
 * DCL - COMMIT, ROLLBACK - 제어
 */

--DATA TYPE : 오라클에서 권장하는 문자열 VARCHAR2(20) 4000Byte 이상은 CLOB , MYSQL 이나 MSSQL에서는 VARCHAR(20)

CREATE TABLE TYPETEST(NAME VARCHAR2(9) PRIMARY KEY, MONEY NUMBER NOT NULL)

--아래 코드는 NAME이 9자 이므로 INSERT 가능 SUCCESS
INSERT INTO TYPETEST(NAME,MONEY) VALUES('ABCDEFGHI',100);
--아래 코드는 최대사이즈가 9로 설정하여 10자는 INSERT가 안됨. ERROR
INSERT INTO TYPETEST(NAME,MONEY) VALUES('ABCDEFGHIJ',100);
--한글은 한글자당 3byte을 차지하므로 4글자를 입력하면 12byte ERROR
INSERT INTO TYPETEST(NAME,MONEY) VALUES('세희누나',100);
-- 한글 3byte 2글자 6byte INSERT 가능 SUCCESS
INSERT INTO TYPETEST(NAME,MONEY) VALUES('하이',100);

SELECT NAME, MONEY FROM TYPETEST;


--UPDATE 연습 : NAME이 홍길동인  대상의 MONEY를 200을 선언
UPDATE TYPETEST SET MONEY=MONEY+200 WHERE NAME='홍길동'
--UPDATE 연습 : NAME이 홍길동인  대상의 MONEY를 200을 누적해본다
UPDATE TYPETEST SET MONEY=MONEY+200 WHERE NAME='홍길동'

 /*
  * DDL : TABLE 정보를 변경할 떄 --> ALTER
  *       제약조건 중 default 사용
  * ex)HIT NUMBER DEFAULT/ 0으로 제약조건을 설정하면 별도로 hit에 정보를 insert 하지 않아도 0으로 초기화
  *    NAME VARCHAR2(100) DEFAULT 'A' 제약조건을 설정하면 별도로 정보를 INSERT을 하지 않아도 'A'로 초기화해준다.
  * */
 
 CREATE TABLE ALTERTEST(ID VARCHAR2(100)PRIMARY KEY,HIT NUMBER DEFAULT 0)
 
 
 INSERT INTO ALTERTEST(ID)VALUES('JAVA')
 
  SELECT ID,HIT FROM ALTERTEST
  SELECT ID,COUNT FROM ALTERTEST2
  
 --DDL : ALTER를 이용해 테이블명을 변경해본다
 ALTER TABLE ALTERTEST RENAME TO ALTERTEST2
 
 --DDL : ALTER를 이용해 컬럼명을 변경해본다
 ALTER TABLE ALTERTEST2 RENAME COLUMN HIT TO COUNT;
 
 /* 테이블명 : PRODUCT
  * 컬렴명 : ID, NAME,MAKER -> VARCHAR2(100), PRICE -> NUMBER  
  * 제약조건 : PRIMARY KEY , 나머지는 NOT NULL
  */
 
 -- DDL : CREATE
 
 CREATE TABLE PRODUCT( ID VARCHAR2(100)PRIMARY KEY,NAME VARCHAR2(100) NOT NULL,
 MAKER VARCHAR2(100)NOT NULL,PRICE NUMBER NOT NULL)
 
 INSERT INTO PRODUCT(ID,NAME,MAKER,PRICE)VALUES('1','카스','오비',2000)
 INSERT INTO PRODUCT(ID,NAME,MAKER,PRICE)VALUES('2','맥스','진로',1800)
 INSERT INTO PRODUCT(ID,NAME,MAKER,PRICE)VALUES('3','테라','오비',2400)
 
 SELECT * FROM PRODUCT
 
 --오라클 함수
 --전체 상품수
 SELECT COUNT(*) FROM PRODUCT;
 
 --상품 최저가
 SELECT MIN(PRICE) FROM PRODUCT;
 
 --상품 최고가
 SELECT MAX(PRICE) FROM PRODUCT;
 
 --상품 평균가
 SELECT AVG(PRICE) FROM PRODUCT;
 
 --정렬 : PRICE 오름차순 (ASC), 내림차순(DESC)
 SELECT ID,NAME,MAKER,PRICE FROM PRODUCT ORDER BY PRICE ASC;
 SELECT ID,NAME,MAKER,PRICE FROM PRODUCT ORDER BY PRICE DESC;
 
 --WHERE 조건결과 ORDER BY 정렬을 함께 한다.
 
 --MAKER가 오비인 상품의 NAME과 PRICE 조회하되 PRICE 내림차순(가격높은 -> 낮은 순으로)으로 정
 SELECT NAME,PRICE FROM PRODUCT WHERE MAKER='오비' ORDER BY PRICE DESC;
 
--PRICE가 2000이상, 2500 이하
 SELECT NAME FROM PRODUCT WHERE PRICE>=2000 AND PRICE <=2500 ORDER BY PRICE ASC;
 -- BETWEEN AND 위와 동일하게 표현할 수 있다.
 SELECT NAME FROM PRODUCT WHERE PRICE BETWEEN 2000 AND 2500 ORDER BY PRICE ASC;
 
 --PRIMARY KEY로 검색해서 0 또는 1을 조회할 수 있다.
 SELECT COUNT(*) FROM PRODUCT WHERE ID='1'; -- 있으면 1
 SELECT COUNT(*) FROM PRODUCT WHERE ID='AB';  -- 없으면 0
 SELECT DISTINCT MAKER FROM PRODUCT;
 
 -- 컬럼 별칭 : MAKER AS 제조사
 SELECT ID,NAME,MAKER AS 제조사 FROM PRODUCT;
 
 /*
  * 상품 중 MAKER가 오비인 상품들의 NAME,MAKER,PRICE를 조회하되 PRICE를 200 씩 할인해서 조회하고 정렬은 가격 내림차순으로 조회한다
  * (PRICE는 별칭을 부여해 컬렴명 대신 할인가로 표현)
  */
 
SELECT NAME,MAKER,PRICE,PRICE-200 AS 할인가 FROM PRODUCT WHERE MAKER ='오비' ORDER BY PRICE DESC;

/* 월요일 공부할 내용
 * ORACLE SEQUENCE
 */ 

SELECT ID,NAME,MAKER,PRICE FROM PRODUCT;
 
 
  SELECT CONSTRAINT_TYPE FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'PRODUCT'





