/*
	JOIN SQL -여러 테이블을 결합하여 정보를 조회하기 위한 SQL
	INNER JOIN - JOIN 조건에서 값이 일치하는 행을 반환
	 -1)equi-join 2)non-equi-join
	 
	OUTER JOIN - JOIN 조건에서 한쪽 값이 일치하지 않더라도 행을 반환
	
	SELF JOIN
*/

/*
	1.INNER JOIN
	 1)equi join : 조인 대상 테이블의 상용하는 컬럼 정보가 정확하게 일치하는 경우에 사용하는 JOIN
	  ex)사원과 부서테이블의 부서번호를 이용해 조인 -> 특징 : WHERE 절에 = 연산자를 이용해 조인조건을 명시
     2)non-equi join : 조인 테이블 간의 상용하는 컬럼 정보가 없을 때 사용하는 조건
      ex)사원 테이블과 월급등급테이블은 컬럼에 연관성은 없지만 사원의 월급 등급을 확인하기 위해 non-equi join 이용
         -> 특징 : WHERE 절에 >(크거나 작거나..) 와 같은 연산자를 이용해 조인 조건을 명시
*/
SELECT E.EMPNO,E.ENAME,D.DEPTNO,D.DNAME,D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;
--위 SQL을  JOIN ON 으로 표현
SELECT E.EMPNO,E.ENAME,D.DEPTNO,D.DNAME,D.LOC
FROM EMP E
INNER JOIN DEPT D ON E.DEPTNO = D.DEPTNO
--위 SQL을 JOIN USING 으로 표현
SELECT E.EMPNO,E.ENAME,D.DEPTNO,D.DNAME,D.LOC
FROM EMP E
INNER JOIN DEPT D USING(DEPTNO)

--가장 높은 sal 월급을 받는 사원 emp의  empno,ename,sal,deptno,loc를 조회
SELECT MAX(SAL) FROM EMP;

SELECT * FROM EMP WHERE SAL = 5000
--equi join(INNER JOIN)
SELECT E.EMPNO,E.ENAME,E.SAL,D.DEPTNO,D.LOC
FROM EMP E, DEPT D 
--WHERE E.DEPTNO = D.DEPTNO AND E.SAL=(SELECT MAX(SAL) FROM EMP)
WHERE E.DEPTNO = D.DEPTNO AND E.EMPNO = (
SELECT EMPNO FROM EMP WHERE SAL = (
SELECT MAX(SAL) FROM EMP))

--non-equi join(INNER JOIN)
--ex) emp(사원)  salgrade(월급등급)
--    sal	    hisal , losal
-- 두 테이블의 연관성은 사원의 sal과 salgrade의 최고액hisal 최저액losal 사이에 있다.
SELECT * FROM EMP;

SELECT * FROM SALGRADE

SELECT E.ENAME, E.SAL, S.GRADE, S.LOSAL, S.HISAL
FROM EMP E, SALGRADE S
WHERE E.ENAME = 'SMITH' AND E.SAL>=S.LOSAL AND E.SAL<=S.HISAL

/*
 * 2. OUTER JOIN
 *    일반적인 조인 조건에 만족하지 않는 경우에도 다른 행을 조회하기 위해 사용 
 *    --> INNER JOIN은 테이블 간의 컬럼에 일치되는 값이 없는 경우에는 조회되지 않는다.
 * 
 *     HOW ? JOIN 조건에(+)을 명시 (조인시킬 값이 없는 측에 표기)
 * 	   SELECT COLUMN ... 
 *     FROM TABLE1,TABLE2
 *     WHERE TABLE1.COLUMN(+) = TABLE2.COLUMN
 */
 
SELECT DISTINCT(DEPTNO) FROM EMP;

SELECT DISTINCT(DEPTNO) FROM DEPT;
--기본 INNER JOIN에서는 사원이 없는 부서 번호 40에 해당하는 부서정보는 조회되지 않는다.
SELECT E.ENAME,D.DEPTNO,D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
ORDER BY D.DEPTNO ASC;
--사원이 없는 부서정보까지 모두 조회하고자 할 때는 OUTER JOIN을 이용한다
SELECT E.ENAME,D.DEPTNO,D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO(+) = D.DEPTNO
ORDER BY D.DEPTNO ASC;

/*
 *  SELF JOIN : 테이블 자체에서 조합
 *  동일한 테이블이지만 개념적으로 다른 정보를 결합
 *  사례 - 
 */

--SMITH의 매니저 사원번호는 7902이다
SELECT EMPNO,ENAME,MGR FROM EMP WHERE EMPNO = 7369
--SMITH의 매니저 번호 MGR은 또 다른 사원의 사원번호EMPNO이다.
SELECT EMPNO,ENAME,MGR FROM EMP WHERE EMPNO = 7902

--현재 사원들의 사원번호 EMPNO, 사원명 ENAME, 매니저번호MGR, 매니저명을 조회
SELECT E.EMPNO,E.ENAME,E.MGR,M.EMPNO,M.ENAME
FROM EMP E,EMP M
WHERE E.MGR = M.EMPNO
--위 SQL은 INNER JOIN 형태이므로 매니저가 없는 사원은 제외되어 13명이 조회(원래14명)
--매니저가 없는 사원까지 모두 조회하고자 할 때는 OUTER JOIN
SELECT E.EMPNO,E.ENAME,E.MGR,M.EMPNO,M.ENAME
FROM EMP E,EMP M
WHERE E.MGR = M.EMPNO(+)

--7369 EMPNO의 ENAME과 DNAME, 매니저명, GRADE(월급등급)을 조회
SELECT E.EMPNO,E.ENAME,E.SAL,D.DNAME,M.ENAME,S.GRADE
FROM EMP E, EMP M, DEPT D ,SALGRADE S	
WHERE E.EMPNO = 7369
AND E.DEPTNO = D.DEPTNO -- 부서
AND E.MGR = M.EMPNO -- 매니저
AND E.SAL >= S.LOSAL  --월급
AND E.SAL <= S.HISAL --월급

